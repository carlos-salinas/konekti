package com.thingtrack.konekti.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.konekti.domain.ClientAgent;
import com.thingtrack.konekti.domain.ClientAgentType;
import com.thingtrack.konekti.service.api.ClientAgentTypeService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.addon.ui.WindowDialog;
import com.thingtrack.konekti.view.web.form.field.AddressField;
import com.thingtrack.konekti.view.web.form.field.AddressField.AddressChangeEvent;
import com.thingtrack.konekti.view.web.form.field.AddressField.AddressChangeListener;
import com.thingtrack.konekti.view.web.form.field.ImageField;
import com.thingtrack.konekti.view.web.form.field.UserField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class ClientAgentViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private UserField userField;
	@AutoGenerated
	private CheckBox clientStatusField;
	@AutoGenerated
	private ComboBox clientAgentTypeField;
	@AutoGenerated
	private ImageField photoField;
	@AutoGenerated
	private TextField tittleField;
	@AutoGenerated
	private TextField surnameField;
	@AutoGenerated
	private TextField shortnameField;
	@AutoGenerated
	private TextField phoneField;
	@AutoGenerated
	private TextField nifField;
	@AutoGenerated
	private TextField nameField;
	@AutoGenerated
	private TextField mobileField;
	@AutoGenerated
	private TextField faxField;
	@AutoGenerated
	private TextField facebookIdField;
	@AutoGenerated
	private AddressField clientAgentAddressField;
	@AutoGenerated
	private TextField emailField;
	@AutoGenerated
	private TextField commentField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private ClientAgent clientAgent;	
	private ClientAgentTypeService clientAgentTypeService;	
	
	// organization type datasource
	private BeanItemContainer<ClientAgentType> bcClientAgentType = new BindingSource<ClientAgentType>(ClientAgentType.class);
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public ClientAgentViewForm() throws IllegalArgumentException, Exception {				
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
		
		// configure Employee Agent Type data		
		clientAgentTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		clientAgentTypeField.setItemCaptionPropertyId("description");
		
		clientAgentAddressField.addListenerAddressChange(new AddressChangeListener() {			
			@Override
			public void addressChange(AddressChangeEvent event) {
				if (clientAgent != null)
					clientAgent.setClientAgentAddress(event.getAddress());
				
			}
		});
		
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
	}
	
	private void initComponents() {
		tittleField.setNullRepresentation("");
		surnameField.setNullRepresentation("");
		shortnameField.setNullRepresentation("");
		phoneField.setNullRepresentation("");
		nifField.setNullRepresentation("");
		nameField.setNullRepresentation("");
		mobileField.setNullRepresentation("");
		faxField.setNullRepresentation("");
		facebookIdField.setNullRepresentation("");
		emailField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		nameField.setRequiredError(nameField.getCaption() + " es un campo requerido");
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(ClientAgentViewForm.class).getBundleContext();
			
			ServiceReference clientAgentTypeServiceReference = bundleContext.getServiceReference(ClientAgentTypeService.class.getName());
			clientAgentTypeService = ClientAgentTypeService.class.cast(bundleContext.getService(clientAgentTypeServiceReference));
			
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {
		bcClientAgentType.removeAllItems();
		bcClientAgentType.addAll(clientAgentTypeService.getAll());		
		
		clientAgentTypeField.setContainerDataSource(bcClientAgentType);
				
	}
	
	@Override
    public void attach() {  
		// recover the parent entity (Client) from parent view window (ClientViewForm)
		if (getParent().getWindow() instanceof WindowDialog<?>) {
			@SuppressWarnings("unchecked")
			WindowDialog<ClientAgent> clientWindowDialog = (WindowDialog<ClientAgent>)getParent().getWindow();
			clientAgent = clientWindowDialog.getDomainEntity();
		}
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("920px");
		mainLayout.setHeight("450px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("920px");
		setHeight("450px");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentario");
		commentField.setImmediate(false);
		commentField.setWidth("895px");
		commentField.setHeight("61px");
		commentField.setTabIndex(16);
		mainLayout.addComponent(commentField, "top:377.0px;left:20.0px;");
		
		// emailField
		emailField = new TextField();
		emailField.setCaption("Email");
		emailField.setImmediate(false);
		emailField.setWidth("400px");
		emailField.setHeight("-1px");
		emailField.setTabIndex(14);
		mainLayout.addComponent(emailField, "top:333.0px;left:20.0px;");
		
		// clientAgentAddressField
		clientAgentAddressField = new AddressField();
		clientAgentAddressField.setCaption("Dirección");
		clientAgentAddressField.setImmediate(false);
		clientAgentAddressField.setWidth("426px");
		clientAgentAddressField.setHeight("130px");
		mainLayout.addComponent(clientAgentAddressField,
				"top:178.0px;left:20.0px;");
		
		// facebookIdField
		facebookIdField = new TextField();
		facebookIdField.setCaption("Facebook Id");
		facebookIdField.setImmediate(false);
		facebookIdField.setWidth("152px");
		facebookIdField.setHeight("-1px");
		facebookIdField.setTabIndex(15);
		mainLayout.addComponent(facebookIdField, "top:320.0px;left:761.0px;");
		
		// faxField
		faxField = new TextField();
		faxField.setCaption("Fax");
		faxField.setImmediate(false);
		faxField.setWidth("154px");
		faxField.setHeight("-1px");
		faxField.setTabIndex(13);
		mainLayout.addComponent(faxField, "top:280.0px;left:761.0px;");
		
		// mobileField
		mobileField = new TextField();
		mobileField.setCaption("Móvil personal");
		mobileField.setImmediate(false);
		mobileField.setWidth("154px");
		mobileField.setHeight("-1px");
		mobileField.setTabIndex(12);
		mainLayout.addComponent(mobileField, "top:238.0px;left:761.0px;");
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Nombre");
		nameField.setImmediate(false);
		nameField.setWidth("120px");
		nameField.setHeight("-1px");
		nameField.setTabIndex(5);
		nameField.setRequired(true);
		mainLayout.addComponent(nameField, "top:92.0px;left:457.0px;");
		
		// nifField
		nifField = new TextField();
		nifField.setCaption("NIF");
		nifField.setImmediate(false);
		nifField.setWidth("92px");
		nifField.setHeight("-1px");
		nifField.setTabIndex(8);
		mainLayout.addComponent(nifField, "top:135.0px;left:634.0px;");
		
		// phoneField
		phoneField = new TextField();
		phoneField.setCaption("Teléfono fijo");
		phoneField.setImmediate(false);
		phoneField.setWidth("154px");
		phoneField.setHeight("-1px");
		phoneField.setTabIndex(11);
		mainLayout.addComponent(phoneField, "top:193.0px;left:761.0px;");
		
		// shortnameField
		shortnameField = new TextField();
		shortnameField.setCaption("Nombre corto");
		shortnameField.setImmediate(false);
		shortnameField.setWidth("169px");
		shortnameField.setHeight("24px");
		shortnameField.setTabIndex(7);
		mainLayout.addComponent(shortnameField, "top:135.0px;left:457.0px;");
		
		// surnameField
		surnameField = new TextField();
		surnameField.setCaption("Apellidos");
		surnameField.setImmediate(false);
		surnameField.setWidth("326px");
		surnameField.setHeight("-1px");
		surnameField.setTabIndex(6);
		mainLayout.addComponent(surnameField, "top:92.0px;left:589.0px;");
		
		// tittleField
		tittleField = new TextField();
		tittleField.setCaption("Trat.");
		tittleField.setImmediate(false);
		tittleField.setWidth("40px");
		tittleField.setHeight("24px");
		tittleField.setTabIndex(4);
		mainLayout.addComponent(tittleField, "top:48.0px;left:458.0px;");
		
		// photoField
		photoField = new ImageField();
		photoField.setCaption("Foto");
		photoField.setImmediate(false);
		photoField.setWidth("426px");
		photoField.setHeight("139px");
		mainLayout.addComponent(photoField, "top:23.0px;left:20.0px;");
		
		// clientAgentTypeField
		clientAgentTypeField = new ComboBox();
		clientAgentTypeField.setCaption("Tipo cliente");
		clientAgentTypeField.setImmediate(false);
		clientAgentTypeField.setWidth("169px");
		clientAgentTypeField.setHeight("-1px");
		clientAgentTypeField.setTabIndex(9);
		mainLayout.addComponent(clientAgentTypeField,
				"top:138.0px;left:746.0px;");
		
		// clientStatusField
		clientStatusField = new CheckBox();
		clientStatusField.setCaption("Activo");
		clientStatusField.setImmediate(false);
		clientStatusField.setWidth("-1px");
		clientStatusField.setHeight("-1px");
		clientStatusField.setTabIndex(3);
		clientStatusField.setRequired(true);
		mainLayout.addComponent(clientStatusField, "top:49.0px;left:842.0px;");
		
		// userField_1
		userField = new UserField();
		userField.setImmediate(false);
		userField.setWidth("283px");
		userField.setHeight("180px");
		mainLayout.addComponent(userField, "top:180.0px;left:458.0px;");
		
		return mainLayout;
	}
}