package com.thingtrack.konekti.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.konekti.domain.Client;
import com.thingtrack.konekti.domain.ClientGroup;
import com.thingtrack.konekti.domain.ClientType;
import com.thingtrack.konekti.domain.Organization;
import com.thingtrack.konekti.domain.Warehouse;
import com.thingtrack.konekti.service.api.ClientGroupService;
import com.thingtrack.konekti.service.api.ClientTypeService;
import com.thingtrack.konekti.service.api.OrganizationService;
import com.thingtrack.konekti.service.api.WarehouseService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.addon.ui.WindowDialog;
import com.thingtrack.konekti.view.web.form.field.AddressField;
import com.thingtrack.konekti.view.web.form.field.AddressField.AddressChangeEvent;
import com.thingtrack.konekti.view.web.form.field.AddressField.AddressChangeListener;
import com.thingtrack.konekti.view.web.form.field.ClientOrganizationCollectionField;
import com.thingtrack.konekti.view.web.form.field.ImageField;
import com.thingtrack.konekti.view.web.form.field.LocaleField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class ClientViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private ImageField photoField;
	@AutoGenerated
	private TextField emailField;
	@AutoGenerated
	private TextField facebookIdField;
	@AutoGenerated
	private TextField mobileField;
	@AutoGenerated
	private TextField faxField;
	@AutoGenerated
	private TextField phoneField;
	@AutoGenerated
	private ClientOrganizationCollectionField organizationsField;
	@AutoGenerated
	private ComboBox clientGroupField;
	@AutoGenerated
	private LocaleField defaultLocaleField;
	@AutoGenerated
	private ComboBox defaultWarehouseField;
	@AutoGenerated
	private ComboBox defaultOrganizationField;
	@AutoGenerated
	private ComboBox clientTypeField;
	@AutoGenerated
	private TextField nameField;
	@AutoGenerated
	private TextField descriptionField;
	@AutoGenerated
	private TextField commentField;
	@AutoGenerated
	private TextField codeField;
	@AutoGenerated
	private AddressField clientAddressField;
	@AutoGenerated
	private TextField vatField;
	@AutoGenerated
	private CheckBox activeField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// form services
	private ClientTypeService clientTypeService;
	private ClientGroupService clientGroupService;
	private OrganizationService organizationService;
	private WarehouseService warehouseService;
	
	// client type datasource
	private BeanItemContainer<ClientType> bcClientType = new BindingSource<ClientType>(ClientType.class);
	private BeanItemContainer<ClientGroup> bcClientGroup = new BindingSource<ClientGroup>(ClientGroup.class);
	private BeanItemContainer<Organization> bcOrganization = new BindingSource<Organization>(Organization.class);
	private BeanItemContainer<Warehouse> bcWarehouse = new BindingSource<Warehouse>(Warehouse.class);
	
	private Client client;
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public ClientViewForm() throws IllegalArgumentException, Exception {		
		 
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
				
		// configure Organization Type data
		clientTypeField.setNullSelectionAllowed(false);
		clientTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		clientTypeField.setItemCaptionPropertyId("description");
		
		clientGroupField.setNullSelectionAllowed(false);
		clientGroupField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		clientGroupField.setItemCaptionPropertyId("description");
		
		clientAddressField.addListenerAddressChange(new AddressChangeListener() {			
			@Override
			public void addressChange(AddressChangeEvent event) {
				if (client != null)
					client.setClientAddress(event.getAddress());
				
			}
		});

		defaultOrganizationField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		defaultOrganizationField.setItemCaptionPropertyId("description");

		defaultWarehouseField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		defaultWarehouseField.setItemCaptionPropertyId("description");
		
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
		
	}
		
	private void initComponents() {
		nameField.setNullRepresentation("");
		descriptionField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		codeField.setNullRepresentation("");
		vatField.setNullRepresentation("");
		phoneField.setNullRepresentation("");
		faxField.setNullRepresentation("");
		mobileField.setNullRepresentation("");
		facebookIdField.setNullRepresentation("");
		emailField.setNullRepresentation("");
		
		organizationsField.setCaption("Organizaciones");
		
		codeField.setRequiredError(codeField.getCaption() + " es un campo requerido");
		clientGroupField.setRequiredError(clientGroupField.getCaption() + " es un campo requerido");
		clientTypeField.setRequiredError(clientTypeField.getCaption() + " es un campo requerido");
		
		codeField.focus();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(ClientViewForm.class).getBundleContext();
			
			ServiceReference clientTypeServiceReference = bundleContext.getServiceReference(ClientTypeService.class.getName());
			clientTypeService = ClientTypeService.class.cast(bundleContext.getService(clientTypeServiceReference));
			
			ServiceReference clientGroupServiceReference = bundleContext.getServiceReference(ClientGroupService.class.getName());
			clientGroupService = ClientGroupService.class.cast(bundleContext.getService(clientGroupServiceReference));
			
			ServiceReference organizationServiceReference = bundleContext.getServiceReference(OrganizationService.class.getName());
			organizationService =OrganizationService.class.cast(bundleContext.getService(organizationServiceReference));
			
			ServiceReference warehouseServiceReference = bundleContext.getServiceReference(OrganizationService.class.getName());
			warehouseService = WarehouseService.class.cast(bundleContext.getService(warehouseServiceReference));
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcClientType.removeAllItems();
		bcClientType.addAll(clientTypeService.getAll());
		
		clientTypeField.setContainerDataSource(bcClientType);
		
		bcClientGroup.removeAllItems();
		bcClientGroup.addAll(clientGroupService.getAll());
		
		clientGroupField.setContainerDataSource(bcClientGroup);
		
	}
	
	@Override
    public void attach() {
		super.attach();
		
		// recover the parent entity (Client) from parent view window (ClientViewForm)
		if (getParent().getWindow() instanceof WindowDialog<?>) {
			@SuppressWarnings("unchecked")
			WindowDialog<Client> clientWindowDialog = (WindowDialog<Client>)getParent().getWindow();
			client = clientWindowDialog.getDomainEntity();    			
		}
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("942px");
		mainLayout.setHeight("440px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("942px");
		setHeight("440px");
		
		// activeField
		activeField = new CheckBox();
		activeField.setCaption("Activo");
		activeField.setImmediate(false);
		activeField.setWidth("-1px");
		activeField.setHeight("-1px");
		activeField.setTabIndex(3);
		activeField.setRequired(true);
		mainLayout.addComponent(activeField, "top:20.0px;left:847.0px;");
		
		// vatField
		vatField = new TextField();
		vatField.setCaption("CIF/NIF");
		vatField.setImmediate(false);
		vatField.setWidth("80px");
		vatField.setHeight("-1px");
		vatField.setTabIndex(6);
		mainLayout.addComponent(vatField, "top:57.0px;left:461.0px;");
		
		// clientAddressField
		clientAddressField = new AddressField();
		clientAddressField.setCaption("Dirección cliente");
		clientAddressField.setImmediate(false);
		clientAddressField.setWidth("421px");
		clientAddressField.setHeight("120px");
		mainLayout.addComponent(clientAddressField, "top:178.0px;left:20.0px;");
		
		// codeField
		codeField = new TextField();
		codeField.setCaption("Código");
		codeField.setImmediate(false);
		codeField.setWidth("79px");
		codeField.setHeight("-1px");
		codeField.setTabIndex(1);
		codeField.setRequired(true);
		mainLayout.addComponent(codeField, "top:17.0px;left:461.0px;");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentario");
		commentField.setImmediate(false);
		commentField.setWidth("420px");
		commentField.setHeight("100px");
		commentField.setTabIndex(8);
		mainLayout.addComponent(commentField, "top:320.0px;left:21.0px;");
		
		// descriptionField
		descriptionField = new TextField();
		descriptionField.setCaption("Descripción");
		descriptionField.setImmediate(false);
		descriptionField.setWidth("472px");
		descriptionField.setHeight("-1px");
		descriptionField.setTabIndex(4);
		mainLayout.addComponent(descriptionField, "top:136.0px;left:461.0px;");
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Nombre Comercial");
		nameField.setImmediate(false);
		nameField.setWidth("261px");
		nameField.setHeight("-1px");
		nameField.setTabIndex(2);
		nameField.setRequired(true);
		mainLayout.addComponent(nameField, "top:17.0px;left:560.0px;");
		
		// clientTypeField
		clientTypeField = new ComboBox();
		clientTypeField.setCaption("Tipo cliente");
		clientTypeField.setImmediate(false);
		clientTypeField.setWidth("160px");
		clientTypeField.setHeight("-1px");
		clientTypeField.setTabIndex(6);
		clientTypeField.setRequired(true);
		mainLayout.addComponent(clientTypeField, "top:57.0px;left:561.0px;");
		
		// defaultOrganizationField
		defaultOrganizationField = new ComboBox();
		defaultOrganizationField.setCaption("Organización defecto");
		defaultOrganizationField.setImmediate(false);
		defaultOrganizationField.setWidth("160px");
		defaultOrganizationField.setHeight("-1px");
		defaultOrganizationField.setTabIndex(6);
		mainLayout.addComponent(defaultOrganizationField,
				"top:95.0px;left:459.0px;");
		
		// defaultWarehouseField
		defaultWarehouseField = new ComboBox();
		defaultWarehouseField.setCaption("Almacén defecto");
		defaultWarehouseField.setImmediate(false);
		defaultWarehouseField.setWidth("160px");
		defaultWarehouseField.setHeight("-1px");
		defaultWarehouseField.setTabIndex(6);
		mainLayout.addComponent(defaultWarehouseField,
				"top:96.0px;left:633.0px;");
		
		// defaultLocaleField
		defaultLocaleField = new LocaleField();
		defaultLocaleField.setCaption("Lenguaje defecto");
		defaultLocaleField.setImmediate(false);
		defaultLocaleField.setWidth("129px");
		defaultLocaleField.setHeight("-1px");
		mainLayout.addComponent(defaultLocaleField, "top:96.0px;left:804.0px;");
		
		// clientGroupField
		clientGroupField = new ComboBox();
		clientGroupField.setCaption("Grupo cliente");
		clientGroupField.setImmediate(false);
		clientGroupField.setWidth("192px");
		clientGroupField.setHeight("-1px");
		clientGroupField.setTabIndex(7);
		clientGroupField.setRequired(true);
		mainLayout.addComponent(clientGroupField, "top:60.0px;left:741.0px;");
		
		// organizationsField
		organizationsField = new ClientOrganizationCollectionField();
		organizationsField.setImmediate(false);
		organizationsField.setWidth("474px");
		organizationsField.setHeight("161px");
		mainLayout
				.addComponent(organizationsField, "top:260.0px;left:459.0px;");
		
		// phoneField
		phoneField = new TextField();
		phoneField.setCaption("Teléfono");
		phoneField.setImmediate(false);
		phoneField.setWidth("102px");
		phoneField.setHeight("-1px");
		mainLayout.addComponent(phoneField, "top:182.0px;left:459.0px;");
		
		// faxField
		faxField = new TextField();
		faxField.setCaption("Fax");
		faxField.setImmediate(false);
		faxField.setWidth("100px");
		faxField.setHeight("-1px");
		mainLayout.addComponent(faxField, "top:182.0px;left:581.0px;");
		
		// mobileField
		mobileField = new TextField();
		mobileField.setCaption("Teléfono Móvil");
		mobileField.setImmediate(false);
		mobileField.setWidth("100px");
		mobileField.setHeight("-1px");
		mainLayout.addComponent(mobileField, "top:182.0px;left:701.0px;");
		
		// facebookIdField
		facebookIdField = new TextField();
		facebookIdField.setCaption("Facebook Id");
		facebookIdField.setImmediate(false);
		facebookIdField.setWidth("112px");
		facebookIdField.setHeight("-1px");
		mainLayout.addComponent(facebookIdField, "top:182.0px;left:821.0px;");
		
		// emailField
		emailField = new TextField();
		emailField.setCaption("Email");
		emailField.setImmediate(false);
		emailField.setWidth("474px");
		emailField.setHeight("-1px");
		mainLayout.addComponent(emailField, "top:226.0px;left:459.0px;");
		
		// photoField
		photoField = new ImageField();
		photoField.setImmediate(false);
		photoField.setWidth("420px");
		photoField.setHeight("140px");
		mainLayout.addComponent(photoField, "top:20.0px;left:21.0px;");
		
		return mainLayout;
	}
}
