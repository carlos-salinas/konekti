package com.thingtrack.konekti.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.konekti.domain.EmployeeAgent;
import com.thingtrack.konekti.domain.EmployeeAgentStatus;
import com.thingtrack.konekti.domain.EmployeeAgentType;
import com.thingtrack.konekti.service.api.EmployeeAgentStatusService;
import com.thingtrack.konekti.service.api.EmployeeAgentTypeService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.addon.ui.WindowDialog;
import com.thingtrack.konekti.view.web.form.field.AddressField;
import com.thingtrack.konekti.view.web.form.field.EmployeeAgentOrganizationCollectionField;
import com.thingtrack.konekti.view.web.form.field.ImageField;
import com.thingtrack.konekti.view.web.form.field.UserField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.validator.EmailValidator;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Select;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class EmployeeAgentViewForm extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayoutBody;
	@AutoGenerated
	private TabSheet tabSheetEmployeeAgent;
	@AutoGenerated
	private VerticalLayout securityLayout;
	@AutoGenerated
	private UserField userField;
	@AutoGenerated
	private VerticalLayout organizationLayout;
	@AutoGenerated
	private EmployeeAgentOrganizationCollectionField employeeAgentOrganizationCollectionField;
	@AutoGenerated
	private VerticalLayout addressLayout;
	@AutoGenerated
	private AddressField employeeAddressField;
	@AutoGenerated
	private AbsoluteLayout generalLayout;
	@AutoGenerated
	private DateField birthdayField;
	@AutoGenerated
	private DateField seniorityField;
	@AutoGenerated
	private TextField workMobileField;
	@AutoGenerated
	private TextField shortnameField;
	@AutoGenerated
	private TextField surnameField;
	@AutoGenerated
	private TextField nameField;
	@AutoGenerated
	private TextField tittleField;
	@AutoGenerated
	private TextField emailField;
	@AutoGenerated
	private TextArea commentField;
	@AutoGenerated
	private TextField facebookIdField;
	@AutoGenerated
	private TextField mobileField;
	@AutoGenerated
	private TextField faxField;
	@AutoGenerated
	private TextField phoneField;
	@AutoGenerated
	private ComboBox employeeAgentTypeField;
	@AutoGenerated
	private TextField nifField;
	@AutoGenerated
	private ImageField photoField;
	@AutoGenerated
	private HorizontalLayout horizontalLayoutHeader;
	@AutoGenerated
	private ComboBox employeeAgentStatusField;
	@AutoGenerated
	private TextField workNumberField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// form services
	private EmployeeAgentTypeService employeeAgentTypeService;
	private EmployeeAgentStatusService employeeAgentStatusService;
	
	// organization type datasource
	private BeanItemContainer<EmployeeAgentType> bcEmployeeAgentType = new BindingSource<EmployeeAgentType>(EmployeeAgentType.class);
	private BeanItemContainer<EmployeeAgentStatus> bcEmployeeAgentStatus = new BindingSource<EmployeeAgentStatus>(EmployeeAgentStatus.class);
	
	private EmployeeAgent employeeAgent;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public EmployeeAgentViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
		
		employeeAgentTypeField.setNullSelectionAllowed(false);
		employeeAgentTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		employeeAgentTypeField.setItemCaptionPropertyId("description");
		
		employeeAgentStatusField.setNullSelectionAllowed(false);
		employeeAgentStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		employeeAgentStatusField.setItemCaptionPropertyId("description");
				
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();		
		
	}

	private void initComponents() {
		tittleField.setNullRepresentation("");
		workNumberField.setNullRepresentation("");
		workMobileField.setNullRepresentation("");
		surnameField.setNullRepresentation("");
		shortnameField.setNullRepresentation("");
		phoneField.setNullRepresentation("");
		nifField.setNullRepresentation("");
		nameField.setNullRepresentation("");
		mobileField.setNullRepresentation("");
		faxField.setNullRepresentation("");
		facebookIdField.setNullRepresentation("");
		emailField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		seniorityField.setDateFormat("dd/MM/yyyy");
		birthdayField.setDateFormat("dd/MM/yyyy");
		
		workNumberField.setRequiredError(workNumberField.getCaption() + " es un campo requerido");
		employeeAgentTypeField.setRequiredError(employeeAgentTypeField.getCaption() + " es un campo requerido");
		employeeAgentStatusField.setRequiredError(employeeAgentStatusField.getCaption() + " es un campo requerido");
		emailField.addValidator(new EmailValidator(emailField.getCaption() + " no es un correo eléctronico válido"));
			
		workNumberField.focus();
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(EmployeeAgentViewForm.class).getBundleContext();
			
			ServiceReference employeeAgentTypeServiceReference = bundleContext.getServiceReference(EmployeeAgentTypeService.class.getName());
			employeeAgentTypeService = EmployeeAgentTypeService.class.cast(bundleContext.getService(employeeAgentTypeServiceReference));

			ServiceReference employeeAgentStatusServiceReference = bundleContext.getServiceReference(EmployeeAgentStatusService.class.getName());
			employeeAgentStatusService = EmployeeAgentStatusService.class.cast(bundleContext.getService(employeeAgentStatusServiceReference));	
			
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcEmployeeAgentType.removeAllItems();
		bcEmployeeAgentType.addAll(employeeAgentTypeService.getAll());		
		
		employeeAgentTypeField.setContainerDataSource(bcEmployeeAgentType);
		
		bcEmployeeAgentStatus.removeAllItems();
		bcEmployeeAgentStatus.addAll(employeeAgentStatusService.getAll());		
		
		employeeAgentStatusField.setContainerDataSource(bcEmployeeAgentStatus);
	}
	
	@Override
    public void attach() {
		super.attach();
		
		// recover the parent entity (EmployeeAgent) from parent view window (EmployeeAgentViewForm)
		if (getParent().getWindow() instanceof WindowDialog<?>) {
			@SuppressWarnings("unchecked")
			WindowDialog<EmployeeAgent> employeeAgentWindowDialog = (WindowDialog<EmployeeAgent>)getParent().getWindow();
			employeeAgent = employeeAgentWindowDialog.getDomainEntity(); 
					
			employeeAgentOrganizationCollectionField.setValue(employeeAgent);
			userField.setAgent(employeeAgent);
		}
	}
		
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("942px");
		mainLayout.setHeight("440px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("942px");
		setHeight("440px");
		
		// horizontalLayoutHeader
		horizontalLayoutHeader = buildHorizontalLayoutHeader();
		mainLayout.addComponent(horizontalLayoutHeader);
		
		// horizontalLayoutBody
		horizontalLayoutBody = buildHorizontalLayoutBody();
		mainLayout.addComponent(horizontalLayoutBody);
		mainLayout.setExpandRatio(horizontalLayoutBody, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutHeader() {
		// common part: create layout
		horizontalLayoutHeader = new HorizontalLayout();
		horizontalLayoutHeader.setImmediate(false);
		horizontalLayoutHeader.setWidth("100.0%");
		horizontalLayoutHeader.setHeight("-1px");
		horizontalLayoutHeader.setMargin(true);
		horizontalLayoutHeader.setSpacing(true);
		
		// workNumberField
		workNumberField = new TextField();
		workNumberField.setCaption("Número Trabajador");
		workNumberField.setImmediate(false);
		workNumberField.setWidth("110px");
		workNumberField.setHeight("-1px");
		workNumberField.setRequired(true);
		horizontalLayoutHeader.addComponent(workNumberField);
		
		// employeeAgentStatusField
		employeeAgentStatusField = new ComboBox();
		employeeAgentStatusField.setCaption("Estado");
		employeeAgentStatusField.setImmediate(false);
		employeeAgentStatusField.setWidth("-1px");
		employeeAgentStatusField.setHeight("-1px");
		employeeAgentStatusField.setRequired(true);
		horizontalLayoutHeader.addComponent(employeeAgentStatusField);
		horizontalLayoutHeader.setExpandRatio(employeeAgentStatusField, 1.0f);
		horizontalLayoutHeader.setComponentAlignment(employeeAgentStatusField,
				new Alignment(6));
		
		return horizontalLayoutHeader;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutBody() {
		// common part: create layout
		horizontalLayoutBody = new HorizontalLayout();
		horizontalLayoutBody.setImmediate(false);
		horizontalLayoutBody.setWidth("100.0%");
		horizontalLayoutBody.setHeight("100.0%");
		horizontalLayoutBody.setMargin(true);
		horizontalLayoutBody.setSpacing(true);
		
		// tabSheetEmployeeAgent
		tabSheetEmployeeAgent = buildTabSheetEmployeeAgent();
		horizontalLayoutBody.addComponent(tabSheetEmployeeAgent);
		
		return horizontalLayoutBody;
	}

	@AutoGenerated
	private TabSheet buildTabSheetEmployeeAgent() {
		// common part: create layout
		tabSheetEmployeeAgent = new TabSheet();
		tabSheetEmployeeAgent.setImmediate(true);
		tabSheetEmployeeAgent.setWidth("100.0%");
		tabSheetEmployeeAgent.setHeight("100.0%");
		
		// generalLayout
		generalLayout = buildGeneralLayout();
		tabSheetEmployeeAgent.addTab(generalLayout, "General", null);
		
		// addressLayout
		addressLayout = buildAddressLayout();
		tabSheetEmployeeAgent.addTab(addressLayout, "Dirección", null);
		
		// organizationLayout
		organizationLayout = buildOrganizationLayout();
		tabSheetEmployeeAgent.addTab(organizationLayout, "Organización", null);
		
		// securityLayout
		securityLayout = buildSecurityLayout();
		tabSheetEmployeeAgent.addTab(securityLayout, "Seguridad", null);
		
		return tabSheetEmployeeAgent;
	}

	@AutoGenerated
	private AbsoluteLayout buildGeneralLayout() {
		// common part: create layout
		generalLayout = new AbsoluteLayout();
		generalLayout.setImmediate(false);
		generalLayout.setWidth("100.0%");
		generalLayout.setHeight("100.0%");
		generalLayout.setMargin(false);
		
		// photoField
		photoField = new ImageField();
		photoField.setImmediate(false);
		photoField.setWidth("420px");
		photoField.setHeight("140px");
		generalLayout.addComponent(photoField, "top:20.0px;left:10.0px;");
		
		// nifField
		nifField = new TextField();
		nifField.setCaption("NIF");
		nifField.setImmediate(false);
		nifField.setWidth("140px");
		nifField.setHeight("-1px");
		generalLayout.addComponent(nifField, "top:58.0px;left:629.0px;");
		
		// employeeAgentTypeField
		employeeAgentTypeField = new ComboBox();
		employeeAgentTypeField.setCaption("Tipo");
		employeeAgentTypeField.setImmediate(false);
		employeeAgentTypeField.setDescription("Tipo Cliente");
		employeeAgentTypeField.setWidth("-1px");
		employeeAgentTypeField.setHeight("-1px");
		employeeAgentTypeField.setRequired(true);
		generalLayout.addComponent(employeeAgentTypeField,
				"top:96.0px;left:434.0px;");
		
		// phoneField
		phoneField = new TextField();
		phoneField.setCaption("Teléfono 01");
		phoneField.setImmediate(false);
		phoneField.setWidth("115px");
		phoneField.setHeight("-1px");
		generalLayout.addComponent(phoneField, "top:58.0px;left:780.0px;");
		
		// faxField
		faxField = new TextField();
		faxField.setCaption("Fax");
		faxField.setImmediate(false);
		faxField.setWidth("115px");
		faxField.setHeight("-1px");
		generalLayout.addComponent(faxField, "top:98.0px;left:657.0px;");
		
		// mobileField
		mobileField = new TextField();
		mobileField.setCaption("Teléfono 02");
		mobileField.setImmediate(false);
		mobileField.setWidth("115px");
		mobileField.setHeight("-1px");
		generalLayout.addComponent(mobileField, "top:98.0px;left:780.0px;");
		
		// facebookIdField
		facebookIdField = new TextField();
		facebookIdField.setCaption("Facebook Id");
		facebookIdField.setImmediate(false);
		facebookIdField.setWidth("309px");
		facebookIdField.setHeight("-1px");
		generalLayout
				.addComponent(facebookIdField, "top:176.0px;left:586.0px;");
		
		// commentField
		commentField = new TextArea();
		commentField.setCaption("Comentarios");
		commentField.setImmediate(false);
		commentField.setWidth("885px");
		commentField.setHeight("70px");
		generalLayout.addComponent(commentField, "top:212.0px;left:11.0px;");
		
		// emailField
		emailField = new TextField();
		emailField.setCaption("Email");
		emailField.setImmediate(false);
		emailField.setWidth("460px");
		emailField.setHeight("-1px");
		generalLayout.addComponent(emailField, "top:174.0px;left:11.0px;");
		
		// tittleField
		tittleField = new TextField();
		tittleField.setCaption("Trat.");
		tittleField.setImmediate(false);
		tittleField.setWidth("49px");
		tittleField.setHeight("-1px");
		generalLayout.addComponent(tittleField, "top:20.0px;left:435.0px;");
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Nombre");
		nameField.setImmediate(false);
		nameField.setWidth("124px");
		nameField.setHeight("-1px");
		nameField.setRequired(true);
		generalLayout.addComponent(nameField, "top:20.0px;left:497.0px;");
		
		// surnameField
		surnameField = new TextField();
		surnameField.setCaption("Apellidos");
		surnameField.setImmediate(false);
		surnameField.setWidth("265px");
		surnameField.setHeight("-1px");
		surnameField.setRequired(true);
		generalLayout.addComponent(surnameField, "top:20.0px;left:629.0px;");
		
		// shortnameField
		shortnameField = new TextField();
		shortnameField.setCaption("Nombre corto");
		shortnameField.setImmediate(false);
		shortnameField.setWidth("186px");
		shortnameField.setHeight("-1px");
		generalLayout.addComponent(shortnameField, "top:58.0px;left:435.0px;");
		
		// workMobileField
		workMobileField = new TextField();
		workMobileField.setCaption("Móbil trabajo");
		workMobileField.setImmediate(false);
		workMobileField.setWidth("115px");
		workMobileField.setHeight("-1px");
		generalLayout
				.addComponent(workMobileField, "top:136.0px;left:781.0px;");
		
		// seniorityField
		seniorityField = new DateField();
		seniorityField.setCaption("Antigüedad");
		seniorityField.setImmediate(false);
		seniorityField.setWidth("141px");
		seniorityField.setHeight("-1px");
		seniorityField.setInvalidAllowed(false);
		seniorityField.setTabIndex(2);
		//seniorityField.setRequired(true);
		generalLayout.addComponent(seniorityField, "top:136.0px;left:586.0px;");
		
		// birthdayField
		birthdayField = new DateField();
		birthdayField.setCaption("Fecha Nacimiento");
		birthdayField.setImmediate(false);
		birthdayField.setWidth("141px");
		birthdayField.setHeight("-1px");
		birthdayField.setInvalidAllowed(false);
		birthdayField.setTabIndex(2);
		//birthdayField.setRequired(true);
		generalLayout.addComponent(birthdayField, "top:135.0px;left:434.0px;");
		
		return generalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildAddressLayout() {
		// common part: create layout
		addressLayout = new VerticalLayout();
		addressLayout.setImmediate(false);
		addressLayout.setWidth("100.0%");
		addressLayout.setHeight("100.0%");
		addressLayout.setMargin(false);
		
		// employeeAddressField
		employeeAddressField = new AddressField();
		employeeAddressField.setImmediate(false);
		employeeAddressField.setWidth("100.0%");
		employeeAddressField.setHeight("100.0%");
		addressLayout.addComponent(employeeAddressField);
		addressLayout.setExpandRatio(employeeAddressField, 1.0f);
		
		return addressLayout;
	}

	@AutoGenerated
	private VerticalLayout buildOrganizationLayout() {
		// common part: create layout
		organizationLayout = new VerticalLayout();
		organizationLayout.setImmediate(false);
		organizationLayout.setWidth("100.0%");
		organizationLayout.setHeight("100.0%");
		organizationLayout.setMargin(false);
		
		// organizationsField
		employeeAgentOrganizationCollectionField = new EmployeeAgentOrganizationCollectionField();
		employeeAgentOrganizationCollectionField.setImmediate(false);
		employeeAgentOrganizationCollectionField.setWidth("100.0%");
		employeeAgentOrganizationCollectionField.setHeight("100.0%");
		organizationLayout.addComponent(employeeAgentOrganizationCollectionField);
		organizationLayout.setExpandRatio(employeeAgentOrganizationCollectionField, 1.0f);
		
		return organizationLayout;
	}

	@AutoGenerated
	private VerticalLayout buildSecurityLayout() {
		// common part: create layout
		securityLayout = new VerticalLayout();
		securityLayout.setImmediate(false);
		securityLayout.setWidth("100.0%");
		securityLayout.setHeight("100.0%");
		securityLayout.setMargin(false);
		
		// userField
		userField = new UserField();
		userField.setImmediate(false);
		userField.setWidth("100.0%");
		userField.setHeight("100.0%");
		securityLayout.addComponent(userField);
		securityLayout.setExpandRatio(userField, 1.0f);
		
		return securityLayout;
	}

}
