package com.thingtrack.konekti.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.konekti.domain.EmployeeAgentStatus;
import com.thingtrack.konekti.domain.EmployeeAgentType;
import com.thingtrack.konekti.domain.Location;
import com.thingtrack.konekti.domain.Organization;
import com.thingtrack.konekti.domain.User;
import com.thingtrack.konekti.service.api.EmployeeAgentStatusService;
import com.thingtrack.konekti.service.api.EmployeeAgentTypeService;
import com.thingtrack.konekti.service.api.LocationService;
import com.thingtrack.konekti.service.api.OrganizationService;
import com.thingtrack.konekti.service.api.UserService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.web.form.field.AddressField;
import com.thingtrack.konekti.view.web.form.field.EmployeeOrganizationCollectionField;
import com.thingtrack.konekti.view.web.form.field.ImageField;
import com.thingtrack.konekti.view.web.form.field.UserField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.validator.EmailValidator;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class EmployeeAgentViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private UserField userField;
	@AutoGenerated
	private AddressField employeeAddressField;
	@AutoGenerated
	private ImageField photoField;
	@AutoGenerated
	private EmployeeOrganizationCollectionField organizationsField;
	@AutoGenerated
	private ComboBox locationField;
	@AutoGenerated
	private ComboBox employeeAgentTypeField;
	@AutoGenerated
	private ComboBox defaultOrganizationField;
	@AutoGenerated
	private TextField tittleField;
	@AutoGenerated
	private ComboBox employeeAgentStatusField;
	@AutoGenerated
	private TextField workNumberField;
	@AutoGenerated
	private TextField workMobileField;
	@AutoGenerated
	private TextField surnameField;
	@AutoGenerated
	private TextField shortnameField;
	@AutoGenerated
	private DateField birthdayField;
	@AutoGenerated
	private DateField seniorityField;
	@AutoGenerated
	private TextField phoneField;
	@AutoGenerated
	private TextField nifField;
	@AutoGenerated
	private TextField nameField;
	@AutoGenerated
	private TextField mobileField;
	@AutoGenerated
	private TextField faxField;
	@AutoGenerated
	private TextField facebookIdField;
	@AutoGenerated
	private TextField emailField;
	@AutoGenerated
	private TextField commentField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */	
	
	// form services
	private UserService userService;
	private EmployeeAgentTypeService employeeAgentTypeService;
	private EmployeeAgentStatusService employeeAgentStatusService;
	private OrganizationService organizationService;
	private LocationService locationService;
	
	// organization type datasource
	private BeanItemContainer<User> bcUser = new BindingSource<User>(User.class);
	private BeanItemContainer<EmployeeAgentType> bcEmployeeAgentType = new BindingSource<EmployeeAgentType>(EmployeeAgentType.class);
	private BeanItemContainer<EmployeeAgentStatus> bcEmployeeAgentStatus = new BindingSource<EmployeeAgentStatus>(EmployeeAgentStatus.class);
	private BeanItemContainer<Organization> bcOrganization = new BindingSource<Organization>(Organization.class);
	private BeanItemContainer<Location> bcLocation = new BindingSource<Location>(Location.class);
		
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */
	public EmployeeAgentViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		initComponents();
				
		employeeAgentTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		employeeAgentTypeField.setItemCaptionPropertyId("description");
		
		employeeAgentStatusField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		employeeAgentStatusField.setItemCaptionPropertyId("description");

		defaultOrganizationField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		defaultOrganizationField.setItemCaptionPropertyId("name");
		
		locationField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		locationField.setItemCaptionPropertyId("name");
		
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
	}
		
	private void initComponents() {
		tittleField.setNullRepresentation("");
		workNumberField.setNullRepresentation("");
		workMobileField.setNullRepresentation("");
		surnameField.setNullRepresentation("");
		shortnameField.setNullRepresentation("");
		phoneField.setNullRepresentation("");
		nifField.setNullRepresentation("");
		nameField.setNullRepresentation("");
		mobileField.setNullRepresentation("");
		faxField.setNullRepresentation("");
		facebookIdField.setNullRepresentation("");
		emailField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		
		seniorityField.setDateFormat("dd/MM/yyyy");
		birthdayField.setDateFormat("dd/MM/yyyy");
		
		workNumberField.setRequiredError(workNumberField.getCaption() + " es un campo requerido");
		employeeAgentTypeField.setRequiredError(employeeAgentTypeField.getCaption() + " es un campo requerido");
		employeeAgentStatusField.setRequiredError(employeeAgentStatusField.getCaption() + " es un campo requerido");
		defaultOrganizationField.setRequiredError(defaultOrganizationField.getCaption() + " es un campo requerido");
		emailField.addValidator(new EmailValidator(emailField.getCaption() + " no es un correo eléctronico válido"));
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(EmployeeAgentViewForm.class).getBundleContext();

			ServiceReference userServiceReference = bundleContext.getServiceReference(UserService.class.getName());
			userService = UserService.class.cast(bundleContext.getService(userServiceReference));
			
			ServiceReference employeeAgentTypeServiceReference = bundleContext.getServiceReference(EmployeeAgentTypeService.class.getName());
			employeeAgentTypeService = EmployeeAgentTypeService.class.cast(bundleContext.getService(employeeAgentTypeServiceReference));

			ServiceReference employeeAgentStatusServiceReference = bundleContext.getServiceReference(EmployeeAgentStatusService.class.getName());
			employeeAgentStatusService = EmployeeAgentStatusService.class.cast(bundleContext.getService(employeeAgentStatusServiceReference));
			
			ServiceReference organizationServiceReference = bundleContext.getServiceReference(OrganizationService.class.getName());
			organizationService = OrganizationService.class.cast(bundleContext.getService(organizationServiceReference));
			
			ServiceReference locationServiceReference = bundleContext.getServiceReference(LocationService.class.getName());
			locationService = LocationService.class.cast(bundleContext.getService(locationServiceReference));		
			
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {		
		bcEmployeeAgentType.removeAllItems();
		bcEmployeeAgentType.addAll(employeeAgentTypeService.getAll());		
		
		employeeAgentTypeField.setContainerDataSource(bcEmployeeAgentType);
		
		bcEmployeeAgentStatus.removeAllItems();
		bcEmployeeAgentStatus.addAll(employeeAgentStatusService.getAll());		
		
		employeeAgentStatusField.setContainerDataSource(bcEmployeeAgentStatus);
		
		bcOrganization.removeAllItems();
		bcOrganization.addAll(organizationService.getAll());		
		
		defaultOrganizationField.setContainerDataSource(bcOrganization);
		
		bcLocation.removeAllItems();
		bcLocation.addAll(locationService.getAll());		
		
		locationField.setContainerDataSource(bcLocation);
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("1070px");
		mainLayout.setHeight("479px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("1070px");
		setHeight("479px");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentario");
		commentField.setImmediate(false);
		commentField.setWidth("1034px");
		commentField.setHeight("61px");
		commentField.setTabIndex(20);
		mainLayout.addComponent(commentField, "top:399.0px;left:20.0px;");
		
		// emailField
		emailField = new TextField();
		emailField.setCaption("Email");
		emailField.setImmediate(false);
		emailField.setWidth("400px");
		emailField.setHeight("-1px");
		emailField.setTabIndex(16);
		mainLayout.addComponent(emailField, "top:357.0px;left:19.0px;");
		
		// facebookIdField
		facebookIdField = new TextField();
		facebookIdField.setCaption("Facebook Id");
		facebookIdField.setImmediate(false);
		facebookIdField.setWidth("152px");
		facebookIdField.setHeight("-1px");
		facebookIdField.setTabIndex(17);
		mainLayout.addComponent(facebookIdField, "top:360.0px;left:902.0px;");
		
		// faxField
		faxField = new TextField();
		faxField.setCaption("Fax");
		faxField.setImmediate(false);
		faxField.setWidth("100px");
		faxField.setHeight("-1px");
		faxField.setTabIndex(15);
		mainLayout.addComponent(faxField, "top:142.0px;left:954.0px;");
		
		// mobileField
		mobileField = new TextField();
		mobileField.setCaption("Móvil personal");
		mobileField.setImmediate(false);
		mobileField.setWidth("100px");
		mobileField.setHeight("-1px");
		mobileField.setTabIndex(13);
		mainLayout.addComponent(mobileField, "top:140.0px;left:834.0px;");
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Nombre");
		nameField.setImmediate(false);
		nameField.setWidth("160px");
		nameField.setHeight("-1px");
		nameField.setTabIndex(6);
		nameField.setRequired(true);
		mainLayout.addComponent(nameField, "top:58.0px;left:459.0px;");
		
		// nifField
		nifField = new TextField();
		nifField.setCaption("NIF");
		nifField.setImmediate(false);
		nifField.setWidth("100px");
		nifField.setHeight("-1px");
		nifField.setTabIndex(9);
		mainLayout.addComponent(nifField, "top:96.0px;left:459.0px;");
		
		// phoneField
		phoneField = new TextField();
		phoneField.setCaption("Teléfono fijo");
		phoneField.setImmediate(false);
		phoneField.setWidth("100px");
		phoneField.setHeight("-1px");
		phoneField.setTabIndex(12);
		mainLayout.addComponent(phoneField, "top:96.0px;left:954.0px;");
		
		// seniorityField
		seniorityField = new DateField();
		seniorityField.setCaption("Antigüedad");
		seniorityField.setImmediate(false);
		seniorityField.setWidth("141px");
		seniorityField.setHeight("-1px");
		seniorityField.setInvalidAllowed(false);
		seniorityField.setTabIndex(2);
		seniorityField.setRequired(true);
		mainLayout.addComponent(seniorityField, "top:142.0px;left:621.0px;");
		
		// birthdayField
		birthdayField = new DateField();
		birthdayField.setCaption("Fecha Nacimiento");
		birthdayField.setImmediate(false);
		birthdayField.setWidth("141px");
		birthdayField.setHeight("-1px");
		birthdayField.setInvalidAllowed(false);
		birthdayField.setTabIndex(2);
		birthdayField.setRequired(true);
		mainLayout.addComponent(birthdayField, "top:142.0px;left:459.0px;");
		
		// shortnameField
		shortnameField = new TextField();
		shortnameField.setCaption("Nombre corto");
		shortnameField.setImmediate(false);
		shortnameField.setWidth("122px");
		shortnameField.setHeight("24px");
		shortnameField.setTabIndex(8);
		mainLayout.addComponent(shortnameField, "top:58.0px;left:932.0px;");
		
		// surnameField
		surnameField = new TextField();
		surnameField.setCaption("Apellidos");
		surnameField.setImmediate(false);
		surnameField.setWidth("260px");
		surnameField.setHeight("-1px");
		surnameField.setTabIndex(7);
		surnameField.setRequired(true);
		mainLayout.addComponent(surnameField, "top:58.0px;left:627.0px;");
		
		// workMobileField
		workMobileField = new TextField();
		workMobileField.setCaption("Móvil trabajo");
		workMobileField.setImmediate(false);
		workMobileField.setWidth("100px");
		workMobileField.setHeight("-1px");
		workMobileField.setTabIndex(11);
		mainLayout.addComponent(workMobileField, "top:96.0px;left:834.0px;");
		
		// workNumberField
		workNumberField = new TextField();
		workNumberField.setCaption("Número Trabajador");
		workNumberField.setImmediate(false);
		workNumberField.setWidth("80px");
		workNumberField.setHeight("-1px");
		workNumberField.setTabIndex(1);
		workNumberField.setRequired(true);
		mainLayout.addComponent(workNumberField, "top:18.0px;left:459.0px;");
		
		// employeeAgentStatusField
		employeeAgentStatusField = new ComboBox();
		employeeAgentStatusField.setCaption("Estado empleado");
		employeeAgentStatusField.setImmediate(false);
		employeeAgentStatusField.setWidth("212px");
		employeeAgentStatusField.setHeight("24px");
		employeeAgentStatusField.setTabIndex(4);
		employeeAgentStatusField.setRequired(true);
		mainLayout.addComponent(employeeAgentStatusField,
				"top:20.0px;left:842.0px;");
		
		// tittleField
		tittleField = new TextField();
		tittleField.setCaption("Tratamiento");
		tittleField.setImmediate(false);
		tittleField.setWidth("48px");
		tittleField.setHeight("-1px");
		tittleField.setTabIndex(5);
		mainLayout.addComponent(tittleField, "top:18.0px;left:774.0px;");
		
		// defaultOrganizationField
		defaultOrganizationField = new ComboBox();
		defaultOrganizationField.setCaption("Organización defecto");
		defaultOrganizationField.setImmediate(false);
		defaultOrganizationField.setWidth("268px");
		defaultOrganizationField.setHeight("-1px");
		defaultOrganizationField.setTabIndex(18);
		defaultOrganizationField.setRequired(true);
		mainLayout.addComponent(defaultOrganizationField,
				"top:357.0px;left:439.0px;");
		
		// employeeAgentTypeField
		employeeAgentTypeField = new ComboBox();
		employeeAgentTypeField.setCaption("Tipo empleado");
		employeeAgentTypeField.setImmediate(false);
		employeeAgentTypeField.setWidth("233px");
		employeeAgentTypeField.setHeight("-1px");
		employeeAgentTypeField.setTabIndex(10);
		employeeAgentTypeField.setRequired(true);
		mainLayout.addComponent(employeeAgentTypeField,
				"top:98.0px;left:581.0px;");
		
		// locationField
		locationField = new ComboBox();
		locationField.setCaption("Centro trabajo");
		locationField.setImmediate(false);
		locationField.setWidth("169px");
		locationField.setHeight("-1px");
		locationField.setTabIndex(19);
		mainLayout.addComponent(locationField, "top:357.0px;left:718.0px;");
		
		// organizationsField
		organizationsField = new EmployeeOrganizationCollectionField();
		organizationsField.setImmediate(false);
		organizationsField.setWidth("283px");
		organizationsField.setHeight("156px");
		mainLayout
				.addComponent(organizationsField, "top:179.0px;left:459.0px;");
		
		// photoField
		photoField = new ImageField();
		photoField.setImmediate(false);
		photoField.setWidth("421px");
		photoField.setHeight("139px");
		mainLayout.addComponent(photoField, "top:17.0px;left:19.0px;");
		
		// employeeAddressField
		employeeAddressField = new AddressField();
		employeeAddressField.setCaption("Dirección");
		employeeAddressField.setImmediate(false);
		employeeAddressField.setWidth("420px");
		employeeAddressField.setHeight("155px");
		mainLayout.addComponent(employeeAddressField,
				"top:180.0px;left:20.0px;");
		
		// userField
		userField = new UserField();
		userField.setImmediate(false);
		userField.setWidth("292px");
		userField.setHeight("156px");
		mainLayout.addComponent(userField, "top:180.0px;left:762.0px;");
		
		return mainLayout;
	}
}