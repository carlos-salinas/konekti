package com.thingtrack.konekti.view.web.form;

import org.osgi.framework.BundleContext;
import org.osgi.framework.FrameworkUtil;
import org.osgi.framework.ServiceReference;

import com.thingtrack.konekti.domain.OrganizationType;
import com.thingtrack.konekti.service.api.OrganizationTypeService;
import com.thingtrack.konekti.view.addon.data.BindingSource;
import com.thingtrack.konekti.view.web.form.field.AddressField;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Select;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class OrganizationViewForm extends CustomComponent {
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private AddressField socialAddressField;
	@AutoGenerated
	private ComboBox organizationTypeField;
	@AutoGenerated
	private TextField nameField;
	@AutoGenerated
	private TextField descriptionField;
	@AutoGenerated
	private TextField commentField;
	@AutoGenerated
	private TextField codeField;
	@AutoGenerated
	private TextField cifField;
	@AutoGenerated
	private CheckBox activeField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	// form services
	private OrganizationTypeService organizationTypeService;
	
	// organization type datasource
	private BeanItemContainer<OrganizationType> bcOrganizationType = new BindingSource<OrganizationType>(OrganizationType.class);	
	
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * @throws Exception 
	 * @throws IllegalArgumentException 
	 */	
	public OrganizationViewForm() throws IllegalArgumentException, Exception {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	    
		// TODO add user code here		
		initComponents();
		
		// configure Organization Type data		
		organizationTypeField.setNullSelectionAllowed(false);
		organizationTypeField.setItemCaptionMode(Select.ITEM_CAPTION_MODE_PROPERTY);
		organizationTypeField.setItemCaptionPropertyId("description");
						
		// get form services from OSGi Service Registry
		getServices();
		
		// load data sources
		loadData();
	}
	
	private void initComponents() {
		nameField.setNullRepresentation("");
		descriptionField.setNullRepresentation("");
		commentField.setNullRepresentation("");
		codeField.setNullRepresentation("");
		cifField.setNullRepresentation("");
		
		codeField.setRequiredError(codeField.getCaption() + " es un campo requerido");
		nameField.setRequiredError(nameField.getCaption() + " es un campo requerido");
		organizationTypeField.setRequiredError(nameField.getCaption() + " es un campo requerido");
		
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void getServices() {
		try {
			BundleContext bundleContext = FrameworkUtil.getBundle(OrganizationViewForm.class).getBundleContext();
						
			ServiceReference organizationTypeServiceReference = bundleContext.getServiceReference(OrganizationTypeService.class.getName());
			organizationTypeService = OrganizationTypeService.class.cast(bundleContext.getService(organizationTypeServiceReference));
		}
		catch (Exception e) {
			e.getMessage();
			
		}
		
	}
	
	private void loadData() throws IllegalArgumentException, Exception {				
		bcOrganizationType.removeAllItems();
		bcOrganizationType.addAll(organizationTypeService.getAll());
		
		organizationTypeField.setContainerDataSource(bcOrganizationType);
		
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("720px");
		mainLayout.setHeight("360px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("720px");
		setHeight("360px");
		
		// activeField
		activeField = new CheckBox();
		activeField.setCaption("Activo");
		activeField.setImmediate(false);
		activeField.setWidth("-1px");
		activeField.setHeight("-1px");
		activeField.setTabIndex(3);
		activeField.setRequired(true);
		mainLayout.addComponent(activeField, "top:20.0px;left:607.0px;");
		
		// cifField
		cifField = new TextField();
		cifField.setCaption("CIF");
		cifField.setImmediate(false);
		cifField.setWidth("120px");
		cifField.setHeight("-1px");
		cifField.setTabIndex(5);
		mainLayout.addComponent(cifField, "top:56.0px;left:400.0px;");
		
		// codeField
		codeField = new TextField();
		codeField.setCaption("Código");
		codeField.setImmediate(false);
		codeField.setWidth("120px");
		codeField.setHeight("-1px");
		codeField.setTabIndex(1);
		codeField.setRequired(true);
		mainLayout.addComponent(codeField, "top:20.0px;left:20.0px;");
		
		// commentField
		commentField = new TextField();
		commentField.setCaption("Comentarios");
		commentField.setImmediate(false);
		commentField.setWidth("680px");
		commentField.setHeight("58px");
		commentField.setTabIndex(8);
		mainLayout.addComponent(commentField, "top:280.0px;left:20.0px;");
		
		// descriptionField
		descriptionField = new TextField();
		descriptionField.setCaption("Descripción");
		descriptionField.setImmediate(false);
		descriptionField.setWidth("360px");
		descriptionField.setHeight("-1px");
		descriptionField.setTabIndex(4);
		mainLayout.addComponent(descriptionField, "top:56.0px;left:20.0px;");
		
		// nameField
		nameField = new TextField();
		nameField.setCaption("Nombre");
		nameField.setImmediate(false);
		nameField.setWidth("320px");
		nameField.setHeight("-1px");
		nameField.setTabIndex(2);
		nameField.setRequired(true);
		mainLayout.addComponent(nameField, "top:20.0px;left:160.0px;");
		
		// organizationTypeField
		organizationTypeField = new ComboBox();
		organizationTypeField.setCaption("Tipo Organización");
		organizationTypeField.setImmediate(true);
		organizationTypeField.setWidth("172px");
		organizationTypeField.setHeight("24px");
		organizationTypeField.setTabIndex(7);
		organizationTypeField.setRequired(true);
		mainLayout.addComponent(organizationTypeField,
				"top:56.0px;left:540.0px;");
		
		// socialAddressField
		socialAddressField = new AddressField();
		socialAddressField.setImmediate(false);
		socialAddressField.setWidth("680px");
		socialAddressField.setHeight("160px");
		socialAddressField.setRequired(true);
		mainLayout.addComponent(socialAddressField, "top:100.0px;left:20.0px;");
		
		return mainLayout;
	}

}
