package com.thingtrack.konekti.view.layout.header;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

import com.thingtrack.konekti.domain.User;
import com.thingtrack.konekti.view.kernel.ui.layout.IHeaderLayout;

@SuppressWarnings("serial")
public class HeaderLayout extends CustomComponent implements IHeaderLayout {

	@AutoGenerated
	private HorizontalLayout mainLayout;

	@AutoGenerated
	private Panel headerPanel;

	@AutoGenerated
	private HorizontalLayout headerHorizontalLayout;

	@AutoGenerated
	private Button btnClose;

	@AutoGenerated
	private Label lblUser;

	@AutoGenerated
	private VerticalLayout headerVerticalLayout;

	@AutoGenerated
	private Label lblVersion;

	@AutoGenerated
	private Label lblKonekti;

	@AutoGenerated
	private Embedded imgLogo;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private User user;
	
	@SuppressWarnings("unused")
	private ClickListener closeSessionListener;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HeaderLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here		
	}

	public void addCloseSessionListener(ClickListener closeSessionListener) {
		this.closeSessionListener = closeSessionListener;
		
		// add close session listener to button
		if (closeSessionListener != null)
			btnClose.addListener(closeSessionListener);
	}
	
	@Override
	public void setKonektiVersion(String version) {
		lblVersion.setValue("Version: " + version);
		
	}
	

	@Override
	public User getUser() {
		return user;
	}
	
	@Override
	public void setUser(User user) {
		this.user = user;
		
		lblUser.setValue("Usuario: " + user.getUsername());
		
	}
	
	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("120px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("120px");
		
		// headerPanel
		headerPanel = buildHeaderPanel();
		mainLayout.addComponent(headerPanel);
		mainLayout.setComponentAlignment(headerPanel, new Alignment(33));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildHeaderPanel() {
		// common part: create layout
		headerPanel = new Panel();
		headerPanel.setStyleName("header");
		headerPanel.setImmediate(false);
		headerPanel.setWidth("100.0%");
		headerPanel.setHeight("100.0%");
		
		// headerHorizontalLayout
		headerHorizontalLayout = buildHeaderHorizontalLayout();
		headerPanel.setContent(headerHorizontalLayout);
		
		return headerPanel;
	}

	@AutoGenerated
	private HorizontalLayout buildHeaderHorizontalLayout() {
		// common part: create layout
		headerHorizontalLayout = new HorizontalLayout();
		headerHorizontalLayout.setImmediate(false);
		headerHorizontalLayout.setWidth("100.0%");
		headerHorizontalLayout.setHeight("100.0%");
		headerHorizontalLayout.setMargin(true);
		
		// imgLogo
		imgLogo = new Embedded();
		imgLogo.setImmediate(false);
		imgLogo.setWidth("75px");
		imgLogo.setHeight("75px");
		imgLogo.setSource(new ThemeResource("../konekti/images/thk_logo.png"));
		imgLogo.setType(1);
		imgLogo.setMimeType("image/png");
		headerHorizontalLayout.addComponent(imgLogo);
		headerHorizontalLayout
				.setComponentAlignment(imgLogo, new Alignment(33));
		
		// headerVerticalLayout
		headerVerticalLayout = buildHeaderVerticalLayout();
		headerHorizontalLayout.addComponent(headerVerticalLayout);
		
		// lblUser
		lblUser = new Label();
		lblUser.setStyleName("header-logon");
		lblUser.setImmediate(false);
		lblUser.setWidth("-1px");
		lblUser.setHeight("-1px");
		lblUser.setValue("Usuario:");
		headerHorizontalLayout.addComponent(lblUser);
		headerHorizontalLayout.setExpandRatio(lblUser, 1.0f);
		headerHorizontalLayout.setComponentAlignment(lblUser, new Alignment(6));
		
		// btnClose
		btnClose = new Button();
		btnClose.setCaption("Cerrar Sesi√≥n");
		btnClose.setImmediate(true);
		btnClose.setWidth("-1px");
		btnClose.setHeight("-1px");
		headerHorizontalLayout.addComponent(btnClose);
		headerHorizontalLayout
				.setComponentAlignment(btnClose, new Alignment(9));
		
		return headerHorizontalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildHeaderVerticalLayout() {
		// common part: create layout
		headerVerticalLayout = new VerticalLayout();
		headerVerticalLayout.setImmediate(false);
		headerVerticalLayout.setWidth("-1px");
		headerVerticalLayout.setHeight("-1px");
		headerVerticalLayout.setMargin(true);
		headerVerticalLayout.setSpacing(true);
		
		// lblKonekti
		lblKonekti = new Label();
		lblKonekti.setStyleName("header-konekti");
		lblKonekti.setImmediate(false);
		lblKonekti.setWidth("-1px");
		lblKonekti.setHeight("-1px");
		lblKonekti.setValue("Konekti");
		headerVerticalLayout.addComponent(lblKonekti);
		headerVerticalLayout.setComponentAlignment(lblKonekti,
				new Alignment(48));
		
		// lblVersion
		lblVersion = new Label();
		lblVersion.setStyleName("header-version");
		lblVersion.setImmediate(false);
		lblVersion.setWidth("-1px");
		lblVersion.setHeight("-1px");
		lblVersion.setValue("Version:");
		headerVerticalLayout.addComponent(lblVersion);
		
		return headerVerticalLayout;
	}

}
