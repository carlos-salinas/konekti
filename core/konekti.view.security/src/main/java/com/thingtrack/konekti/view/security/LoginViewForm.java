package com.thingtrack.konekti.view.security;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.StreamResource;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.terminal.StreamResource.StreamSource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class LoginViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayoutSecurity;
	@AutoGenerated
	private PasswordField passwordField;
	@AutoGenerated
	private TextField usernameField;
	@AutoGenerated
	private Embedded applicationLogoEmbedded;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	private String version;
	private byte[] logo;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor. yy
	 */
	public LoginViewForm(String version, byte[] logo) {
		this.version = version;
		this.logo = logo;
		
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here				
		usernameField.setNullRepresentation("");
		passwordField.setNullRepresentation("");
		
		usernameField.focus();
	}

	@Override
	public void attach() {
		setConfiguration();
	}
	
	private void setConfiguration() {
		if (logo != null)
			applicationLogoEmbedded.setSource(getImageLogo("logo_into", logo));	
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("380px");
		mainLayout.setHeight("260px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("380px");
		setHeight("260px");
		
		// verticalLayoutSecurity
		verticalLayoutSecurity = buildVerticalLayoutSecurity();
		mainLayout.addComponent(verticalLayoutSecurity,
				"top:0.0px;bottom:9.0px;left:0.0px;");
		
		return mainLayout;
	}

    private StreamResource getImageLogo(String name, final byte[] byteResource) {
    	if (byteResource == null)
    		return null;
    	
    	// create an instance of our stream source.
    	StreamSource imagesource = new ModuleResource(byteResource);
    	
    	// Create a resource that uses the stream source and give it a name.
    	// The constructor will automatically register the resource in the application.    	
    	StreamResource imageresource = new StreamResource(imagesource, name + "_user.png", getApplication());
    	
        return imageresource;
    }
    
    private class ModuleResource implements StreamResource.StreamSource {
    	private byte[] resource = null;
    	private ByteArrayOutputStream imagebuffer = null;
   	
    	public ModuleResource(byte[] resource) {
    		this.resource = resource;
   		
    	}
   	
		@Override
		public InputStream getStream() {
			if (resource != null) {
				InputStream in = new ByteArrayInputStream(resource);
				BufferedImage bImageFromConvert = null;
	       	
				try {
					bImageFromConvert = ImageIO.read(in);					
					imagebuffer = new ByteArrayOutputStream();
					
					ImageIO.write(bImageFromConvert, "png", imagebuffer);
					} catch (IOException e) {	
						e.printStackTrace();
						
					}
	               
	               return new ByteArrayInputStream(imagebuffer.toByteArray());
	           }
	           
	           return null;
			}
	   	
   	}
    
	@AutoGenerated
	private VerticalLayout buildVerticalLayoutSecurity() {
		// common part: create layout
		verticalLayoutSecurity = new VerticalLayout();
		verticalLayoutSecurity.setImmediate(false);
		verticalLayoutSecurity.setWidth("100.0%");
		verticalLayoutSecurity.setHeight("100.0%");
		verticalLayoutSecurity.setMargin(true);
		verticalLayoutSecurity.setSpacing(true);
		
		// embedded_1
		applicationLogoEmbedded = new Embedded();
		applicationLogoEmbedded.setImmediate(false);
		applicationLogoEmbedded.setWidth("342px");
		applicationLogoEmbedded.setHeight("102px");
		applicationLogoEmbedded.setSource(new ThemeResource("images/logokFleet.png"));
		applicationLogoEmbedded.setType(1);
		applicationLogoEmbedded.setMimeType("image/png");
		verticalLayoutSecurity.addComponent(applicationLogoEmbedded);
		
		// usernameField
		usernameField = new TextField();
		usernameField.setCaption("Nombre de usuario");
		usernameField.setImmediate(false);
		usernameField.setWidth("100.0%");
		usernameField.setHeight("-1px");
		usernameField.setNullRepresentation(" ");
		verticalLayoutSecurity.addComponent(usernameField);
		
		// passwordField
		passwordField = new PasswordField();
		passwordField.setCaption("Clave de acceso");
		passwordField.setImmediate(false);
		passwordField.setWidth("100.0%");
		passwordField.setHeight("-1px");
		verticalLayoutSecurity.addComponent(passwordField);
		
		return verticalLayoutSecurity;
	}

}
