package com.thingtrack.konekti.view.layout.menu;

import java.util.List;

import org.vaadin.hene.popupbutton.PopupButton;

import com.thingtrack.konekti.domain.User;
import com.thingtrack.konekti.view.kernel.ui.layout.IMenuLayout;
import com.thingtrack.konekti.view.layout.menu.internal.AboutViewForm;
import com.thingtrack.konekti.view.layout.menu.internal.LogoutViewForm;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.Resource;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.MenuBar.Command;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.themes.Reindeer;

@SuppressWarnings("serial")
public class MenuLayout extends CustomComponent implements IMenuLayout {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private Embedded applicationLogoEmbedded;
	@AutoGenerated
	private PopupButton profilePopupButton;
	@AutoGenerated
	private PopupButton helpPopupButton;
	@AutoGenerated
	private Button closeSessionButton;
	@AutoGenerated
	private MenuBar menuBarLayout;
	
	private LogoutViewForm logoutViewForm;
	private AboutViewForm aboutViewForm;
	
	private String logo;
	
	@Override
	public User getUser() {
		return logoutViewForm.getUser();
		
	}

	@Override
	public void setUser(User user) {
		logoutViewForm.setUser(user);
		
		if (user.getClient() != null)
			profilePopupButton.setCaption(user.getClient().getName());
		else if (user.getEmployeeAgent() != null) 
			profilePopupButton.setCaption(user.getEmployeeAgent().getName());
		else if (user.getSupplier() != null)
			profilePopupButton.setCaption(user.getSupplier().getName());
	}
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MenuLayout(String logo) {
		this.logo = logo;
		
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		mainLayout.setSpacing(true);
		mainLayout.setStyleName("konekti_logo");

		applicationLogoEmbedded.setSource(new ThemeResource("images/" + this.logo));
		
		closeSessionButton.setStyleName(Reindeer.BUTTON_LINK);
		closeSessionButton.addListener(new Button.ClickListener() {			
			@Override
			public void buttonClick(ClickEvent event) {
				getApplication().close();
			}
		});
		
		profilePopupButton.setStyleName(Reindeer.BUTTON_LINK);
		helpPopupButton.setStyleName(Reindeer.BUTTON_LINK);
		
		logoutViewForm = new LogoutViewForm(profilePopupButton);
		profilePopupButton.addComponent(logoutViewForm);
		
		aboutViewForm = new AboutViewForm();
		helpPopupButton.addComponent(aboutViewForm);
	}
		
	@Override
	public MenuItem getMenuItem(String name) {
		for (MenuItem menuItem : menuBarLayout.getItems()) { 
			if (menuItem.getClass().getName() == name)
				return menuItem;
			
		}
		
		return null;
	}
	
	@Override
	public MenuItem addMenuItem(String caption, Command command) {
		return menuBarLayout.addItem(caption, command);
		
	}
	
	@Override
	public MenuItem addMenuItem(String caption, MenuItem menuItem, Command command) {
		return menuItem.addItem(caption, command);
		
	}
	
	@Override
	public MenuItem addMenuItem(String caption, String hint, MenuItem menuItem, Command command) {
		MenuItem itm = menuItem.addItem(caption, command);
		itm.setDescription(hint);
		
		return itm;
		
	}
	
	@Override
	public MenuItem addMenuItem(String caption, Resource icon, Command command) {
		return menuBarLayout.addItem(caption, icon, command);
		
	}

	@Override
	public MenuItem addMenuItem(String caption, Resource icon, MenuItem menuItem, Command command) {
		return menuItem.addItem(caption, icon, command);
		
	}
	
	@Override
	public MenuItem addMenuItem(String caption, String hint, Resource icon, MenuItem menuItem, Command command) {
		MenuItem itm = menuItem.addItem(caption, icon, command);
		itm.setDescription(hint);
		
		return itm;
		
	}
	
	@Override
	public List<MenuItem> getItems() {
		return menuBarLayout.getItems();
	}
	
	@Override
	public void removeItem(MenuItem item) {
		menuBarLayout.removeItem(item);
	}
	
	@Override
	public void removeItems() {
		menuBarLayout.removeItems();
	}
	
	@SuppressWarnings("deprecation")
	@Override
	public boolean getCollapse() {
		return menuBarLayout.getCollapse();
	}
	
	@Override
	public int getSize() {
		return menuBarLayout.getSize();
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("40px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("40px");
		
		// menuBarLayout
		menuBarLayout = new MenuBar();
		menuBarLayout.setImmediate(false);
		menuBarLayout.setWidth("100.0%");
		menuBarLayout.setHeight("100.0%");
		mainLayout.addComponent(menuBarLayout);
		mainLayout.setExpandRatio(menuBarLayout, 1.0f);
		mainLayout.setComponentAlignment(menuBarLayout, new Alignment(33));
		
		// closeSessionButton
		closeSessionButton = new Button();
		closeSessionButton.setCaption("Cerrar sesi√≥n");
		closeSessionButton.setImmediate(false);
		closeSessionButton.setWidth("-1px");
		closeSessionButton.setHeight("-1px");
		mainLayout.addComponent(closeSessionButton);
		mainLayout.setComponentAlignment(closeSessionButton, new Alignment(33));
		
		// helpPopupButton
		helpPopupButton = new PopupButton("Ayuda");
		helpPopupButton.setImmediate(false);
		helpPopupButton.setWidth("-1px");
		helpPopupButton.setHeight("-1px");
		mainLayout.addComponent(helpPopupButton);
		mainLayout.setComponentAlignment(helpPopupButton, new Alignment(33));
		
		// profilePopupButton
		profilePopupButton = new PopupButton("Usuario");
		profilePopupButton.setImmediate(false);
		profilePopupButton.setWidth("-1px");
		profilePopupButton.setHeight("-1px");
		mainLayout.addComponent(profilePopupButton);
		mainLayout.setComponentAlignment(profilePopupButton, new Alignment(33));
		
		// applicationLogoEmbedded
		applicationLogoEmbedded = new Embedded();
		applicationLogoEmbedded.setImmediate(false);
		applicationLogoEmbedded.setWidth("150px");
		applicationLogoEmbedded.setHeight("40px");
		applicationLogoEmbedded.setType(1);
		applicationLogoEmbedded.setMimeType("image/png");
		mainLayout.addComponent(applicationLogoEmbedded);
		mainLayout.setComponentAlignment(applicationLogoEmbedded, new Alignment(33));
		
		return mainLayout;
	}

}
