package com.thingtrack.konekti.view.addon.ui;

import java.io.Serializable;

import org.vaadin.cssinject.CSSInject;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.VerticalSplitPanel;

@SuppressWarnings("serial")
public class MasterDetailLayout extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalSplitPanel verticalSplitPanelMasterDetail;
	@AutoGenerated
	private HorizontalLayout bottonLayout;
	@AutoGenerated
	private VerticalLayout bottonCard;
	@AutoGenerated
	private VerticalLayout bottonSelectedCard;
	@AutoGenerated
	private HorizontalLayout topLayout;
	@AutoGenerated
	private VerticalLayout topCard;
	@AutoGenerated
	private VerticalLayout topSelectedCard;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public static final String TOP_CARD = "TOP";
	public static final String BOTTON_CARD = "BOTTON";
	
	private static final String DEFAULT_CARD_SELECTOR_COLOR = "orange";
	private static final String MODULE_SELECTED_STYLE = "module-selected";
	
	private CSSInject cssInjectSelecorColor = new CSSInject();
	
	private String color;
	
	private ClickCardListener listenerClickCard;
	
	private String activeCard = TOP_CARD;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MasterDetailLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		mainLayout.addComponent(cssInjectSelecorColor);
		
		setStyleName("v-master-detail-layout");
		
		// set default color
		color = DEFAULT_CARD_SELECTOR_COLOR;
		
		// set labels selected styles
		topSelectedCard.setStyleName("top_card_selected_label");
		bottonSelectedCard.setStyleName("botton_card_selected_label");
		
		// listen for layout click on layout
		topCard.addListener(new LayoutClickListener() {			
			public void layoutClick(LayoutClickEvent event) {
				cssInjectSelecorColor.setValue("." + MODULE_SELECTED_STYLE + " .top_card_selected_label { background-color:" + color + "; }");
								
				if (listenerClickCard != null)
					listenerClickCard.cardClick(new ClickCardEvent(TOP_CARD, event.getComponent()));
				
				activeCard = TOP_CARD;
			}
		});
		
		bottonCard.addListener(new LayoutClickListener() {		
			public void layoutClick(LayoutClickEvent event) {
				cssInjectSelecorColor.setValue("." + MODULE_SELECTED_STYLE + " .botton_card_selected_label { background-color:" + color + "; }");
								
				if (listenerClickCard != null)
					listenerClickCard.cardClick(new ClickCardEvent(BOTTON_CARD, event.getComponent()));
				
				activeCard = BOTTON_CARD;
			}
		});
	}
	
	public String getActiveCard() {
		return this.activeCard;
		
	}
	
	public void setSelectedColor(String color) {
		this.color = color;
		
	}
	
	public void addTopComonent(Component component) {
		component.setSizeFull();
		topCard.addComponent(component);
		
	}
	
	public void addBottonComonent(Component component) {
		component.setSizeFull();
		bottonCard.addComponent(component);
		
	}
	
	public void addListenerParsingTemplateButton(ClickCardListener listener) {
		this.listenerClickCard = listener;
		
	}

	public interface ClickCardListener extends Serializable {
        public void cardClick(ClickCardEvent event);

    }
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalSplitPanelMasterDetail
		verticalSplitPanelMasterDetail = buildVerticalSplitPanelMasterDetail();
		mainLayout.addComponent(verticalSplitPanelMasterDetail);
		mainLayout.setExpandRatio(verticalSplitPanelMasterDetail, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalSplitPanel buildVerticalSplitPanelMasterDetail() {
		// common part: create layout
		verticalSplitPanelMasterDetail = new VerticalSplitPanel();
		verticalSplitPanelMasterDetail.setImmediate(false);
		verticalSplitPanelMasterDetail.setWidth("100.0%");
		verticalSplitPanelMasterDetail.setHeight("100.0%");
		verticalSplitPanelMasterDetail.setMargin(false);
		
		// topLayout
		topLayout = buildTopLayout();
		verticalSplitPanelMasterDetail.addComponent(topLayout);
		
		// bottonLayout
		bottonLayout = buildBottonLayout();
		verticalSplitPanelMasterDetail.addComponent(bottonLayout);
		
		return verticalSplitPanelMasterDetail;
	}

	@AutoGenerated
	private HorizontalLayout buildTopLayout() {
		// common part: create layout
		topLayout = new HorizontalLayout();
		topLayout.setImmediate(false);
		topLayout.setWidth("100.0%");
		topLayout.setHeight("100.0%");
		topLayout.setMargin(false);
		
		// topSelectedCard
		topSelectedCard = new VerticalLayout();
		topSelectedCard.setImmediate(false);
		topSelectedCard.setWidth("5px");
		topSelectedCard.setHeight("100.0%");
		topSelectedCard.setMargin(false);
		topLayout.addComponent(topSelectedCard);
		
		// topCard
		topCard = new VerticalLayout();
		topCard.setImmediate(false);
		topCard.setWidth("100.0%");
		topCard.setHeight("100.0%");
		topCard.setMargin(false);
		topLayout.addComponent(topCard);
		topLayout.setExpandRatio(topCard, 1.0f);
		
		return topLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildBottonLayout() {
		// common part: create layout
		bottonLayout = new HorizontalLayout();
		bottonLayout.setImmediate(false);
		bottonLayout.setWidth("100.0%");
		bottonLayout.setHeight("100.0%");
		bottonLayout.setMargin(false);
		
		// bottonSelectedCard
		bottonSelectedCard = new VerticalLayout();
		bottonSelectedCard.setImmediate(false);
		bottonSelectedCard.setWidth("5px");
		bottonSelectedCard.setHeight("100.0%");
		bottonSelectedCard.setMargin(false);
		bottonLayout.addComponent(bottonSelectedCard);
		
		// bottonCard
		bottonCard = new VerticalLayout();
		bottonCard.setImmediate(false);
		bottonCard.setWidth("100.0%");
		bottonCard.setHeight("100.0%");
		bottonCard.setMargin(false);
		bottonLayout.addComponent(bottonCard);
		bottonLayout.setExpandRatio(bottonCard, 1.0f);
		
		return bottonLayout;
	}

	public class ClickCardEvent extends Event {
		private String position;
		private Component card;
		
		public ClickCardEvent(String position, Component card) {
			super(card);
			
			this.position = position;
		}
		
		public Component getCard() {
			return this.card;
			
		}
		
		public String getPosition() {
			return this.position;
			
		}
	  }
}
