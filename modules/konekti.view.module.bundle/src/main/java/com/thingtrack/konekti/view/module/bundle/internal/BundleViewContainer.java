package com.thingtrack.konekti.view.module.bundle.internal;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import org.osgi.framework.BundleContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.osgi.context.BundleContextAware;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.VerticalLayout;

import com.thingtrack.konekti.view.addon.ui.AbstractViewContainer;
import com.thingtrack.konekti.view.addon.ui.SliderView;
import com.thingtrack.konekti.view.kernel.IWorkbenchContext;
import com.thingtrack.konekti.view.kernel.ui.layout.ISliderView;
import com.thingtrack.konekti.view.kernel.ui.layout.IViewChangeListener;
import com.thingtrack.konekti.view.kernel.ui.layout.IView;

@SuppressWarnings("serial")
public class BundleViewContainer extends AbstractViewContainer implements BundleContextAware {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private SliderView sliderView;

	/** Views **/
	private BundleView bundleView;
		
	/** Business services **/
	@Autowired
	private org.apache.felix.bundlerepository.RepositoryAdmin felixRepositoryAdminService;

	@Autowired
	private org.osgi.service.obr.RepositoryAdmin obrRepositoryAdminService;
	
	private BundleContext bundleContext;
	
	private IWorkbenchContext context; 
	
	// Thread Local Bundle Business Services
	private static ThreadLocal<org.apache.felix.bundlerepository.RepositoryAdmin> threadFelixRepositoryAdminService = new ThreadLocal<org.apache.felix.bundlerepository.RepositoryAdmin>();
	private static ThreadLocal<org.osgi.service.obr.RepositoryAdmin> threadObrRepositoryAdminService = new ThreadLocal<org.osgi.service.obr.RepositoryAdmin>();
	private static ThreadLocal<BundleContext> threadBundleContextService = new ThreadLocal<BundleContext>();
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
		
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public BundleViewContainer(IWorkbenchContext context) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		this.context = context;
	}

	@Override
	public void setBundleContext(BundleContext bundleContext) {
		this.bundleContext = bundleContext;				
		
	}
	
	@SuppressWarnings("unused")
	@PostConstruct
	private void createViews() {
		// initialize thread local bundle services
		threadFelixRepositoryAdminService.set(felixRepositoryAdminService);
		threadObrRepositoryAdminService.set(obrRepositoryAdminService);
		threadBundleContextService.set(bundleContext);
		
		// add all views controlled by SliderView Component
		bundleView = new BundleView(context, this);
		sliderView.addView(bundleView);
		views.put(0, bundleView);
	}

	@SuppressWarnings("unused")
	@PreDestroy
	private void destroyViews() {
		// destroy thread local bundle services
		threadFelixRepositoryAdminService.set(null);
		threadObrRepositoryAdminService.set(null);
		threadBundleContextService.set(null);
		
	}
	
    public static org.apache.felix.bundlerepository.RepositoryAdmin getContainerFelixRepositoryAdminService() {
        return threadFelixRepositoryAdminService.get();
        
    }
    
    public static org.osgi.service.obr.RepositoryAdmin getContainerObrRepositoryAdminService() {
        return threadObrRepositoryAdminService.get();
        
    }
    
    public static BundleContext getContainerBundleContextService() {
        return threadBundleContextService.get();
        
    }
    
	@Override
	public ISliderView getSliderView() {
		return sliderView;
		
	}
	
	@Override
	public IView getSelectedView() {
		return sliderView.getSelectedView();
		
	}
	
	@Override
	public void addListener(IViewChangeListener listener) {
		sliderView.addListener(listener);
		
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// sliderView_1
		sliderView = new SliderView();
		sliderView.setImmediate(false);
		sliderView.setWidth("100.0%");
		sliderView.setHeight("100.0%");
		mainLayout.addComponent(sliderView);
		mainLayout.setExpandRatio(sliderView, 1.0f);
		
		return mainLayout;
	}

}
